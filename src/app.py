import streamlit as st
import pandas as pd
import os
from Predictor import CourseRecommender

st.set_page_config(page_title="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫—É—Ä—Å–æ–≤", layout="centered")

MODEL_PATH = os.path.join(os.path.dirname(__file__), "course_recommender_nn.pt")
COURSES_PATH = os.path.join(os.path.dirname(__file__), "../data/courses.csv")

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –∫—É—Ä—Å–æ–≤
@st.cache_resource
def load_recommender():
    recommender = CourseRecommender(MODEL_PATH)
    return recommender

@st.cache_data
def load_courses():
    return pd.read_csv(COURSES_PATH)

recommender = load_recommender()
courses_df = load_courses()

st.title("üéì –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫—É—Ä—Å–æ–≤")
st.write("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫—É—Ä—Å–∞–º –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞!")

majors = ["CS", "Math", "History", "Physics"]
major = st.selectbox("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å (major)", majors)
gpa = st.slider("–í–∞—à GPA (–æ—Ç 40 –¥–æ 100)", 40, 100, 70)
motivation = st.slider("–ú–æ—Ç–∏–≤–∞—Ü–∏—è (–æ—Ç 0 –¥–æ 1)", 0.0, 1.0, 0.5, step=0.01)
year_of_study = st.selectbox("–ö—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è", [1, 2, 3, 4])

# –§–æ—Ä–º–∏—Ä—É–µ–º one-hot major
student_data = {
    "gpa": gpa,
    "year_of_study": year_of_study,
    "motivation": motivation,
    f"major_{major}": 1,
}
for m in majors:
    if m != major:
        student_data[f"major_{m}"] = 0
student_data["major"] = major  # –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

if st.button("–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏!"):
    recommendations = recommender.recommend_courses(student_data, courses_df, top_n=5)
    st.subheader("–¢–æ–ø-5 –∫—É—Ä—Å–æ–≤ –¥–ª—è –≤–∞—Å:")
    for i, rec in enumerate(recommendations, 1):
        st.markdown(f"**{i}. {rec['course']}**  ")
        st.write(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {rec['category']}, –°–ª–æ–∂–Ω–æ—Å—Ç—å: {rec['difficulty']}, –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞: {rec['score']:.1%}")
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –ø–æ –≤—Å–µ–º –∫—É—Ä—Å–∞–º
    st.subheader("–í–∞—à–∏ —à–∞–Ω—Å—ã –Ω–∞ –≤—Å–µ—Ö –∫—É—Ä—Å–∞—Ö:")
    all_recs = recommender.recommend_courses(student_data, courses_df, top_n=len(courses_df))
    chart_df = pd.DataFrame({
        "–ö—É—Ä—Å": [r["course"] for r in all_recs],
        "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞": [r["score"] for r in all_recs]
    })
    st.bar_chart(chart_df.set_index("–ö—É—Ä—Å")) 